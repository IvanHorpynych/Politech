; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23026.0 

	TITLE	D:\Documents\2 курс\1 семестр\ООП\LW1-1\Test.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	_main
PUBLIC	??_C@_0CA@KFCPIDIJ@?$HO?$HO?$HO?5Test?3?5SUBSTR?5Function?5?$HO?$HO?$HO?6?6?$AA@ ; `string'
PUBLIC	??_C@_02PKCDLILB@DE?$AA@			; `string'
PUBLIC	??_C@_08OJKKBOA@ABCDEDEF?$AA@			; `string'
PUBLIC	??_C@_0DE@LPCEOFPF@STRING1?5?$DN?5?8ABCDEDEF?8?$DL?5STRING2?5?$DN?5@ ; `string'
PUBLIC	??_C@_0CA@DHEEDCPE@?$HO?$HO?$HO?5Test?3?5SUBSEQ?5Function?5?$HO?$HO?$HO?6?6?$AA@ ; `string'
PUBLIC	??_C@_04ILJKFADF@ABCD?$AA@			; `string'
PUBLIC	??_C@_06BJCILPHA@ABCDEF?$AA@			; `string'
PUBLIC	??_C@_0DE@FFEHEGJE@STRING1?5?$DN?5?8ABCDEF?8?$DL?5STRING2?5?$DN?5?8A@ ; `string'
PUBLIC	??_C@_0BP@MPGDCLDA@?$HO?$HO?$HO?5Test?3?5ISPAL?5Function?5?$HO?$HO?$HO?6?6?$AA@ ; `string'
PUBLIC	??_C@_07JLBMNAMH@ABCDCBA?$AA@			; `string'
PUBLIC	??_C@_0CB@HMLIIPDM@STRING?5?$DN?5?8ABCDCBA?8?$DL?5ISPAL?5?$DN?5?$CFd?6?6@ ; `string'
PUBLIC	??_C@_0CB@BHIPEJHC@?$HO?$HO?$HO?5Test?3?5MAKEPAL?5Function?5?$HO?$HO?$HO?6?6@ ; `string'
PUBLIC	??_C@_03KALIMGMM@?$MA?A?Q?$AA@			; `string'
PUBLIC	??_C@_0CA@PBKPFJHC@STRING?5?$DN?5?8ABCD?8?$DL?5MAKEPAL?5?$DN?5?$CFs?6?6?$AA@ ; `string'
PUBLIC	??_C@_0CE@OKDOABN@?$HO?$HO?$HO?5Test?3?5TXT2DOUBLE?5Function?5?$HO?$HO@ ; `string'
PUBLIC	??_C@_0CJ@DOENJMCA@STRING?5?$DN?5?8?93?414?$DL0?40?$DL9?486?8?$DL?5TXT2D@ ; `string'
PUBLIC	??_C@_0P@OEPGILH@?93?414?$DL0?40?$DL9?486?$AA@	; `string'
PUBLIC	??_C@_04BPBICAEA@?5?$CFf?$DL?$AA@		; `string'
PUBLIC	??_C@_0N@OCFFADFJ@?5SIZE?5?$DN?5?$CFd?6?6?$AA@	; `string'
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	_substr:PROC
EXTRN	_subseq:PROC
EXTRN	_ispal:PROC
EXTRN	_makepal:PROC
EXTRN	_txt2double:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_0N@OCFFADFJ@?5SIZE?5?$DN?5?$CFd?6?6?$AA@
CONST	SEGMENT
??_C@_0N@OCFFADFJ@?5SIZE?5?$DN?5?$CFd?6?6?$AA@ DB ' SIZE = %d', 0aH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04BPBICAEA@?5?$CFf?$DL?$AA@
CONST	SEGMENT
??_C@_04BPBICAEA@?5?$CFf?$DL?$AA@ DB ' %f;', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OEPGILH@?93?414?$DL0?40?$DL9?486?$AA@
CONST	SEGMENT
??_C@_0P@OEPGILH@?93?414?$DL0?40?$DL9?486?$AA@ DB '-3.14;0.0;9.86', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@DOENJMCA@STRING?5?$DN?5?8?93?414?$DL0?40?$DL9?486?8?$DL?5TXT2D@
CONST	SEGMENT
??_C@_0CJ@DOENJMCA@STRING?5?$DN?5?8?93?414?$DL0?40?$DL9?486?8?$DL?5TXT2D@ DB 'S'
	DB	'TRING = ''-3.14;0.0;9.86''; TXT2DOUBLE = ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@OKDOABN@?$HO?$HO?$HO?5Test?3?5TXT2DOUBLE?5Function?5?$HO?$HO@
CONST	SEGMENT
??_C@_0CE@OKDOABN@?$HO?$HO?$HO?5Test?3?5TXT2DOUBLE?5Function?5?$HO?$HO@ DB '~'
	DB	'~~ Test: TXT2DOUBLE Function ~~~', 0aH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@PBKPFJHC@STRING?5?$DN?5?8ABCD?8?$DL?5MAKEPAL?5?$DN?5?$CFs?6?6?$AA@
CONST	SEGMENT
??_C@_0CA@PBKPFJHC@STRING?5?$DN?5?8ABCD?8?$DL?5MAKEPAL?5?$DN?5?$CFs?6?6?$AA@ DB 'S'
	DB	'TRING = ''ABCD''; MAKEPAL = %s', 0aH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03KALIMGMM@?$MA?A?Q?$AA@
CONST	SEGMENT
??_C@_03KALIMGMM@?$MA?A?Q?$AA@ DB 0c0H, 0c1H, 0d1H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@BHIPEJHC@?$HO?$HO?$HO?5Test?3?5MAKEPAL?5Function?5?$HO?$HO?$HO?6?6@
CONST	SEGMENT
??_C@_0CB@BHIPEJHC@?$HO?$HO?$HO?5Test?3?5MAKEPAL?5Function?5?$HO?$HO?$HO?6?6@ DB '~'
	DB	'~~ Test: MAKEPAL Function ~~~', 0aH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@HMLIIPDM@STRING?5?$DN?5?8ABCDCBA?8?$DL?5ISPAL?5?$DN?5?$CFd?6?6@
CONST	SEGMENT
??_C@_0CB@HMLIIPDM@STRING?5?$DN?5?8ABCDCBA?8?$DL?5ISPAL?5?$DN?5?$CFd?6?6@ DB 'S'
	DB	'TRING = ''ABCDCBA''; ISPAL = %d', 0aH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07JLBMNAMH@ABCDCBA?$AA@
CONST	SEGMENT
??_C@_07JLBMNAMH@ABCDCBA?$AA@ DB 'ABCDCBA', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@MPGDCLDA@?$HO?$HO?$HO?5Test?3?5ISPAL?5Function?5?$HO?$HO?$HO?6?6?$AA@
CONST	SEGMENT
??_C@_0BP@MPGDCLDA@?$HO?$HO?$HO?5Test?3?5ISPAL?5Function?5?$HO?$HO?$HO?6?6?$AA@ DB '~'
	DB	'~~ Test: ISPAL Function ~~~', 0aH, 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@FFEHEGJE@STRING1?5?$DN?5?8ABCDEF?8?$DL?5STRING2?5?$DN?5?8A@
CONST	SEGMENT
??_C@_0DE@FFEHEGJE@STRING1?5?$DN?5?8ABCDEF?8?$DL?5STRING2?5?$DN?5?8A@ DB 'S'
	DB	'TRING1 = ''ABCDEF''; STRING2 = ''ABCD''; SUBSEQ = %d', 0aH, 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_06BJCILPHA@ABCDEF?$AA@
CONST	SEGMENT
??_C@_06BJCILPHA@ABCDEF?$AA@ DB 'ABCDEF', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04ILJKFADF@ABCD?$AA@
CONST	SEGMENT
??_C@_04ILJKFADF@ABCD?$AA@ DB 'ABCD', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@DHEEDCPE@?$HO?$HO?$HO?5Test?3?5SUBSEQ?5Function?5?$HO?$HO?$HO?6?6?$AA@
CONST	SEGMENT
??_C@_0CA@DHEEDCPE@?$HO?$HO?$HO?5Test?3?5SUBSEQ?5Function?5?$HO?$HO?$HO?6?6?$AA@ DB '~'
	DB	'~~ Test: SUBSEQ Function ~~~', 0aH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@LPCEOFPF@STRING1?5?$DN?5?8ABCDEDEF?8?$DL?5STRING2?5?$DN?5@
CONST	SEGMENT
??_C@_0DE@LPCEOFPF@STRING1?5?$DN?5?8ABCDEDEF?8?$DL?5STRING2?5?$DN?5@ DB 'S'
	DB	'TRING1 = ''ABCDEDEF''; STRING2 = ''DE''; SUBSTR = %d', 0aH, 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08OJKKBOA@ABCDEDEF?$AA@
CONST	SEGMENT
??_C@_08OJKKBOA@ABCDEDEF?$AA@ DB 'ABCDEDEF', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02PKCDLILB@DE?$AA@
CONST	SEGMENT
??_C@_02PKCDLILB@DE?$AA@ DB 'DE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@KFCPIDIJ@?$HO?$HO?$HO?5Test?3?5SUBSTR?5Function?5?$HO?$HO?$HO?6?6?$AA@
CONST	SEGMENT
??_C@_0CA@KFCPIDIJ@?$HO?$HO?$HO?5Test?3?5SUBSTR?5Function?5?$HO?$HO?$HO?6?6?$AA@ DB '~'
	DB	'~~ Test: SUBSTR Function ~~~', 0aH, 0aH, 00H ; `string'
CONST	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\documents\2 курс\1 семестр\ооп\lw1-1\test.c
;	COMDAT _main
_TEXT	SEGMENT
_size$ = -36						; size = 4
_i$ = -24						; size = 4
_vect$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_main	PROC						; COMDAT

; 3    : int main () {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 18 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-232]
  00012	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00023	33 c5		 xor	 eax, ebp
  00025	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 4    : 	double *vect; int i, size = 0; 

  00028	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _size$[ebp], 0

; 5    : 	printf("~~~ Test: SUBSTR Function ~~~\n\n");

  0002f	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@KFCPIDIJ@?$HO?$HO?$HO?5Test?3?5SUBSTR?5Function?5?$HO?$HO?$HO?6?6?$AA@
  00034	e8 00 00 00 00	 call	 _printf
  00039	83 c4 04	 add	 esp, 4

; 6    : 	printf("STRING1 = 'ABCDEDEF'; STRING2 = 'DE'; SUBSTR = %d\n\n", substr("ABCDEDEF", "DE"));

  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_02PKCDLILB@DE?$AA@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_08OJKKBOA@ABCDEDEF?$AA@
  00046	e8 00 00 00 00	 call	 _substr
  0004b	83 c4 08	 add	 esp, 8
  0004e	50		 push	 eax
  0004f	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@LPCEOFPF@STRING1?5?$DN?5?8ABCDEDEF?8?$DL?5STRING2?5?$DN?5@
  00054	e8 00 00 00 00	 call	 _printf
  00059	83 c4 08	 add	 esp, 8

; 7    : 	printf("~~~ Test: SUBSEQ Function ~~~\n\n");

  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@DHEEDCPE@?$HO?$HO?$HO?5Test?3?5SUBSEQ?5Function?5?$HO?$HO?$HO?6?6?$AA@
  00061	e8 00 00 00 00	 call	 _printf
  00066	83 c4 04	 add	 esp, 4

; 8    : 	printf("STRING1 = 'ABCDEF'; STRING2 = 'ABCD'; SUBSEQ = %d\n\n", subseq("ABCDEF", "ABCD"));

  00069	68 00 00 00 00	 push	 OFFSET ??_C@_04ILJKFADF@ABCD?$AA@
  0006e	68 00 00 00 00	 push	 OFFSET ??_C@_06BJCILPHA@ABCDEF?$AA@
  00073	e8 00 00 00 00	 call	 _subseq
  00078	83 c4 08	 add	 esp, 8
  0007b	50		 push	 eax
  0007c	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@FFEHEGJE@STRING1?5?$DN?5?8ABCDEF?8?$DL?5STRING2?5?$DN?5?8A@
  00081	e8 00 00 00 00	 call	 _printf
  00086	83 c4 08	 add	 esp, 8

; 9    : 	printf("~~~ Test: ISPAL Function ~~~\n\n");

  00089	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@MPGDCLDA@?$HO?$HO?$HO?5Test?3?5ISPAL?5Function?5?$HO?$HO?$HO?6?6?$AA@
  0008e	e8 00 00 00 00	 call	 _printf
  00093	83 c4 04	 add	 esp, 4

; 10   : 	printf("STRING = 'ABCDCBA'; ISPAL = %d\n\n", ispal("ABCDCBA"));

  00096	68 00 00 00 00	 push	 OFFSET ??_C@_07JLBMNAMH@ABCDCBA?$AA@
  0009b	e8 00 00 00 00	 call	 _ispal
  000a0	83 c4 04	 add	 esp, 4
  000a3	0f be c0	 movsx	 eax, al
  000a6	50		 push	 eax
  000a7	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@HMLIIPDM@STRING?5?$DN?5?8ABCDCBA?8?$DL?5ISPAL?5?$DN?5?$CFd?6?6@
  000ac	e8 00 00 00 00	 call	 _printf
  000b1	83 c4 08	 add	 esp, 8

; 11   : 	printf("~~~ Test: MAKEPAL Function ~~~\n\n");

  000b4	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@BHIPEJHC@?$HO?$HO?$HO?5Test?3?5MAKEPAL?5Function?5?$HO?$HO?$HO?6?6@
  000b9	e8 00 00 00 00	 call	 _printf
  000be	83 c4 04	 add	 esp, 4

; 12   : 	printf("STRING = 'ABCD'; MAKEPAL = %s\n\n", makepal("АБС"));

  000c1	68 00 00 00 00	 push	 OFFSET ??_C@_03KALIMGMM@?$MA?A?Q?$AA@
  000c6	e8 00 00 00 00	 call	 _makepal
  000cb	83 c4 04	 add	 esp, 4
  000ce	50		 push	 eax
  000cf	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@PBKPFJHC@STRING?5?$DN?5?8ABCD?8?$DL?5MAKEPAL?5?$DN?5?$CFs?6?6?$AA@
  000d4	e8 00 00 00 00	 call	 _printf
  000d9	83 c4 08	 add	 esp, 8

; 13   : 	printf("~~~ Test: TXT2DOUBLE Function ~~~\n\n");

  000dc	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@OKDOABN@?$HO?$HO?$HO?5Test?3?5TXT2DOUBLE?5Function?5?$HO?$HO@
  000e1	e8 00 00 00 00	 call	 _printf
  000e6	83 c4 04	 add	 esp, 4

; 14   : 	printf("STRING = '-3.14;0.0;9.86'; TXT2DOUBLE = ");

  000e9	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@DOENJMCA@STRING?5?$DN?5?8?93?414?$DL0?40?$DL9?486?8?$DL?5TXT2D@
  000ee	e8 00 00 00 00	 call	 _printf
  000f3	83 c4 04	 add	 esp, 4

; 15   : 	vect = txt2double("-3.14;0.0;9.86", &size);

  000f6	8d 45 dc	 lea	 eax, DWORD PTR _size$[ebp]
  000f9	50		 push	 eax
  000fa	68 00 00 00 00	 push	 OFFSET ??_C@_0P@OEPGILH@?93?414?$DL0?40?$DL9?486?$AA@
  000ff	e8 00 00 00 00	 call	 _txt2double
  00104	83 c4 08	 add	 esp, 8
  00107	89 45 f4	 mov	 DWORD PTR _vect$[ebp], eax

; 16   : 	for (i = 0; i < size; i++) printf(" %f;", vect[i]);

  0010a	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00111	eb 09		 jmp	 SHORT $LN4@main
$LN2@main:
  00113	8b 45 e8	 mov	 eax, DWORD PTR _i$[ebp]
  00116	83 c0 01	 add	 eax, 1
  00119	89 45 e8	 mov	 DWORD PTR _i$[ebp], eax
$LN4@main:
  0011c	8b 45 e8	 mov	 eax, DWORD PTR _i$[ebp]
  0011f	3b 45 dc	 cmp	 eax, DWORD PTR _size$[ebp]
  00122	7d 22		 jge	 SHORT $LN3@main
  00124	8b 45 e8	 mov	 eax, DWORD PTR _i$[ebp]
  00127	8b 4d f4	 mov	 ecx, DWORD PTR _vect$[ebp]
  0012a	83 ec 08	 sub	 esp, 8
  0012d	f2 0f 10 04 c1	 movsd	 xmm0, QWORD PTR [ecx+eax*8]
  00132	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00137	68 00 00 00 00	 push	 OFFSET ??_C@_04BPBICAEA@?5?$CFf?$DL?$AA@
  0013c	e8 00 00 00 00	 call	 _printf
  00141	83 c4 0c	 add	 esp, 12			; 0000000cH
  00144	eb cd		 jmp	 SHORT $LN2@main
$LN3@main:

; 17   : 	printf(" SIZE = %d\n\n", size);

  00146	8b 45 dc	 mov	 eax, DWORD PTR _size$[ebp]
  00149	50		 push	 eax
  0014a	68 00 00 00 00	 push	 OFFSET ??_C@_0N@OCFFADFJ@?5SIZE?5?$DN?5?$CFd?6?6?$AA@
  0014f	e8 00 00 00 00	 call	 _printf
  00154	83 c4 08	 add	 esp, 8

; 18   : 	
; 19   : 
; 20   : }

  00157	33 c0		 xor	 eax, eax
  00159	52		 push	 edx
  0015a	8b cd		 mov	 ecx, ebp
  0015c	50		 push	 eax
  0015d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN8@main
  00163	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00168	58		 pop	 eax
  00169	5a		 pop	 edx
  0016a	5f		 pop	 edi
  0016b	5e		 pop	 esi
  0016c	5b		 pop	 ebx
  0016d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00170	33 cd		 xor	 ecx, ebp
  00172	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00177	81 c4 e8 00 00
	00		 add	 esp, 232		; 000000e8H
  0017d	3b ec		 cmp	 ebp, esp
  0017f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00184	8b e5		 mov	 esp, ebp
  00186	5d		 pop	 ebp
  00187	c3		 ret	 0
$LN8@main:
  00188	01 00 00 00	 DD	 1
  0018c	00 00 00 00	 DD	 $LN7@main
$LN7@main:
  00190	dc ff ff ff	 DD	 -36			; ffffffdcH
  00194	04 00 00 00	 DD	 4
  00198	00 00 00 00	 DD	 $LN6@main
$LN6@main:
  0019c	73		 DB	 115			; 00000073H
  0019d	69		 DB	 105			; 00000069H
  0019e	7a		 DB	 122			; 0000007aH
  0019f	65		 DB	 101			; 00000065H
  001a0	00		 DB	 0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.10150.0\ucrt\stdio.h
;	COMDAT _printf
_TEXT	SEGMENT
__ArgList$ = -20					; size = 4
__Result$ = -8						; size = 4
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT

; 950  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00012	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 951  :     int _Result;
; 952  :     va_list _ArgList;
; 953  :     __crt_va_start(_ArgList, _Format);

  0001e	8d 45 0c	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00021	89 45 ec	 mov	 DWORD PTR __ArgList$[ebp], eax

; 954  :     _Result = _vfprintf_l(stdout, _Format, NULL, _ArgList);

  00024	8b 45 ec	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00027	50		 push	 eax
  00028	6a 00		 push	 0
  0002a	8b 4d 08	 mov	 ecx, DWORD PTR __Format$[ebp]
  0002d	51		 push	 ecx
  0002e	8b f4		 mov	 esi, esp
  00030	6a 01		 push	 1
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____acrt_iob_func
  00038	83 c4 04	 add	 esp, 4
  0003b	3b f4		 cmp	 esi, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	50		 push	 eax
  00043	e8 00 00 00 00	 call	 __vfprintf_l
  00048	83 c4 10	 add	 esp, 16			; 00000010H
  0004b	89 45 f8	 mov	 DWORD PTR __Result$[ebp], eax

; 955  :     __crt_va_end(_ArgList);

  0004e	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 956  :     return _Result;

  00055	8b 45 f8	 mov	 eax, DWORD PTR __Result$[ebp]

; 957  : }

  00058	5f		 pop	 edi
  00059	5e		 pop	 esi
  0005a	5b		 pop	 ebx
  0005b	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00061	3b ec		 cmp	 ebp, esp
  00063	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.10150.0\ucrt\stdio.h
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT

; 638  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 639  :     return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

  0001e	8b f4		 mov	 esi, esp
  00020	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00023	50		 push	 eax
  00024	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00027	51		 push	 ecx
  00028	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  0002b	52		 push	 edx
  0002c	8b 45 08	 mov	 eax, DWORD PTR __Stream$[ebp]
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00035	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00038	51		 push	 ecx
  00039	8b 10		 mov	 edx, DWORD PTR [eax]
  0003b	52		 push	 edx
  0003c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vfprintf
  00042	83 c4 18	 add	 esp, 24			; 00000018H
  00045	3b f4		 cmp	 esi, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 640  : }

  0004c	5f		 pop	 edi
  0004d	5e		 pop	 esi
  0004e	5b		 pop	 ebx
  0004f	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00055	3b ec		 cmp	 ebp, esp
  00057	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.10150.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 73   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 74   :     static unsigned __int64 _OptionsStorage;
; 75   :     return &_OptionsStorage;

  0001e	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 76   : }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
